using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using LuaSTGEditorSharp.EditorData.Document;
using LuaSTGEditorSharp.EditorData.Node.NodeAttributes;
using LuaSTGEditorSharp.EditorData.Node.General;
using Newtonsoft.Json;

namespace LuaSTGEditorSharp.EditorData.Node
{
    [Serializable, NodeIcon("images/16x16/setting.png")]
    [CannotDelete]
    [LeafNode]
    [RCInvoke(0)]
    public class ProjSettings : TreeNode
    {
        [JsonConstructor]
        private ProjSettings() : base() { }

        public ProjSettings(DocumentData workSpaceData) 
            : this(workSpaceData, "", "", "true", "true") { }

        public ProjSettings(DocumentData workSpaceData, string name, string auth, string pr, string scpr) 
            : base(workSpaceData)
        {
            attributes.Add(new AttrItem("Output Name", name, this));
            attributes.Add(new AttrItem("Author", auth, this));
            attributes.Add(new AttrItem("Allow practice", pr, this, "bool"));
            attributes.Add(new AttrItem("Allow sc practice", scpr, this, "bool"));
        }

        public override string ToString()
        {
            return "Project Settings";
        }

        public override IEnumerable<string> ToLua(int spacing)
        {
            yield return "-- Generated by LuaSTG Editor Sharp\n-- Mod name: " + NonMacrolize(0) + "\n_author = \"" +
                Macrolize(1) + "\"\n_mod_version = 4096\n_allow_practice = " + Macrolize(2) +
                "\n_allow_sc_practice =" + Macrolize(3) + "\n";
        }

        public override IEnumerable<Tuple<int,TreeNode>> GetLines()
        {
            yield return new Tuple<int, TreeNode>(6, this);
        }

        public override object Clone()
        {
            var n = new Comment(parentWorkSpace, "Mod name: " + attributes[0].AttrInput + "\nAuthor: " +
                attributes[1].AttrInput + "\nAllow Practice: " + attributes[2].AttrInput +
                "\nAllow Spell Card Practice: " + attributes[3].AttrInput);
            n.FixAttrParent();
            n.FixChildrenParent();
            return n;
        }
    }
}
